# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Python application
on: [push, pull_request_target]
permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        beets: ["1.5.0", "1.6.0", "2.0.0", "2.1.0", "2.2.0", "2.3.0", "2.4.0"]
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: poetry

      - name: Set beets to version ${{ matrix.beets }}
        run: |
          poetry add beets==${{ matrix.beets }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --extend-ignore=E701 --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          poetry run coverage run -m pytest

      - name: Print coverage report
        run: |
          poetry run coverage report -m
